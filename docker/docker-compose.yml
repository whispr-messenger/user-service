version: '3.8'

services:
  user-service:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    container_name: user-service
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=whisper_user
      - DATABASE_PASSWORD=whisper_password
      - DATABASE_NAME=whisper_users
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-jwt-secret-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - whisper-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: user-service-postgres
    environment:
      - POSTGRES_DB=whisper_users
      - POSTGRES_USER=whisper_user
      - POSTGRES_PASSWORD=whisper_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - whisper-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U whisper_user -d whisper_users"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: user-service-redis
    command: redis-server --appendonly yes --requirepass redis_password
    environment:
      - REDIS_PASSWORD=redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - whisper-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  whisper-network:
    driver: bridge